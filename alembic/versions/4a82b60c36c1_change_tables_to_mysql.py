"""change tables to mysql

Revision ID: 4a82b60c36c1
Revises: 
Create Date: 2025-09-27 20:44:12.131305

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4a82b60c36c1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('delivery_channels',
    sa.Column('channel_id', sa.Integer(), nullable=False),
    sa.Column('channel_name', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('channel_id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_delivery_channels_channel_id'), 'delivery_channels', ['channel_id'], unique=False)
    op.create_table('entities',
    sa.Column('Key', sa.String(length=255), nullable=False),
    sa.Column('Field', sa.String(length=255), nullable=False),
    sa.Column('Type', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('Key'),
    mysql_engine='InnoDB'
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('annual', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('calendars',
    sa.Column('calendar_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('calendar_name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('calendar_id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_calendars_calendar_id'), 'calendars', ['calendar_id'], unique=False)
    op.create_table('reminders',
    sa.Column('reminder_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reminder_datetime', sa.DateTime(), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('reminder_id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_reminders_reminder_id'), 'reminders', ['reminder_id'], unique=False)
    op.create_table('smtp_settings',
    sa.Column('smtp_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('smtp_server', sa.String(length=255), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=500), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('smtp_id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_smtp_settings_smtp_id'), 'smtp_settings', ['smtp_id'], unique=False)
    op.create_table('todos',
    sa.Column('todo_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('todo_id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_todos_todo_id'), 'todos', ['todo_id'], unique=False)
    op.create_table('whatsapp_settings',
    sa.Column('wa_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('api_key', sa.String(length=500), nullable=False),
    sa.Column('phone_number_id', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('wa_id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_whatsapp_settings_wa_id'), 'whatsapp_settings', ['wa_id'], unique=False)
    op.create_table('calendar_events',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('calendar_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=False),
    sa.Column('related_reminder_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_id'], ['calendars.calendar_id'], ),
    sa.ForeignKeyConstraint(['related_reminder_id'], ['reminders.reminder_id'], ),
    sa.PrimaryKeyConstraint('event_id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_calendar_events_event_id'), 'calendar_events', ['event_id'], unique=False)
    op.create_table('reminder_deliveries',
    sa.Column('delivery_id', sa.Integer(), nullable=False),
    sa.Column('reminder_id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.Integer(), nullable=False),
    sa.Column('delivery_status', sa.String(length=50), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['delivery_channels.channel_id'], ),
    sa.ForeignKeyConstraint(['reminder_id'], ['reminders.reminder_id'], ),
    sa.PrimaryKeyConstraint('delivery_id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_reminder_deliveries_delivery_id'), 'reminder_deliveries', ['delivery_id'], unique=False)
    op.create_table('reminder_logs',
    sa.Column('id_log_id', sa.Integer(), nullable=False),
    sa.Column('reminder_id', sa.Integer(), nullable=False),
    sa.Column('original_text', sa.Text(), nullable=True),
    sa.Column('ai_generated_text', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reminder_id'], ['reminders.reminder_id'], ),
    sa.PrimaryKeyConstraint('id_log_id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_reminder_logs_id_log_id'), 'reminder_logs', ['id_log_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reminder_logs_id_log_id'), table_name='reminder_logs')
    op.drop_table('reminder_logs')
    op.drop_index(op.f('ix_reminder_deliveries_delivery_id'), table_name='reminder_deliveries')
    op.drop_table('reminder_deliveries')
    op.drop_index(op.f('ix_calendar_events_event_id'), table_name='calendar_events')
    op.drop_table('calendar_events')
    op.drop_index(op.f('ix_whatsapp_settings_wa_id'), table_name='whatsapp_settings')
    op.drop_table('whatsapp_settings')
    op.drop_index(op.f('ix_todos_todo_id'), table_name='todos')
    op.drop_table('todos')
    op.drop_index(op.f('ix_smtp_settings_smtp_id'), table_name='smtp_settings')
    op.drop_table('smtp_settings')
    op.drop_index(op.f('ix_reminders_reminder_id'), table_name='reminders')
    op.drop_table('reminders')
    op.drop_index(op.f('ix_calendars_calendar_id'), table_name='calendars')
    op.drop_table('calendars')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('entities')
    op.drop_index(op.f('ix_delivery_channels_channel_id'), table_name='delivery_channels')
    op.drop_table('delivery_channels')
    # ### end Alembic commands ###
